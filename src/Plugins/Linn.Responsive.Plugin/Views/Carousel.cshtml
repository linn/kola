@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Kola.Domain.Instances.ContainerInstance>
@using Kola.Domain.Extensions
@using Kola.Nancy.Extensions
@using Linn.Responsive.Plugin.Extensions
@{
    var alignment = Model.Properties.GetAsAttribute("alignment", "data-carousel-alignment");
    var infinityScroll = Model.Properties.GetAsAttribute("infinity-scroll", "data-carousel-infinity-scroll");
    var previewPrevious = Model.Properties.GetAsAttribute("preview-previous", "data-carousel-preview-previous");
    var previewNext = Model.Properties.GetAsAttribute("preview-next", "data-carousel-preview-next");
    var previewThreshold = Model.Properties.GetAsAttribute("preview-threshold", "data-carousel-preview-threshold");
    var slidePerPage = Model.Properties.GetAsAttribute("slide-per-page", "data-carousel-slide-per-page");
    var updateHash = Model.Properties.GetAsAttribute("update-hash", "data-content-update-hash");
    var contentSetId = Model.Properties.GetAsAttribute("content-set-id", "data-content-set-id");
    var contentSwitch = Model.Properties.GetAsBool("content-switch") ? "content-switch" : string.Empty;

    var attributes = string.Format("{0}{1}{2}{3}{4}{5}{6}{7}", alignment, infinityScroll, previewPrevious, previewNext, previewThreshold, updateHash, slidePerPage, contentSetId);
}
<div class="carousel @Model.Properties.GetClassNames()" @Html.Raw(attributes)>
    <div class="slides">
        <div class="positioner @contentSwitch">
            @Html.RenderComponents(Model.Components)
        </div>
        @if (Model.Properties.GetAsBool("show-previous"))
        {
            <div class="content-navigator previous" data-content-navigator-target="previous">
            </div>
        }
        @if (Model.Properties.GetAsBool("show-next"))
        {
            <div class="content-navigator next">
            </div>
        }
        <div style="clear:both"></div>
    </div>
</div>
